<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-BFS0L6V" failures="0" tests="5" name="ChromeTest" time="1.837" errors="0" timestamp="05 Aug 2020 05:15:51 GMT">
  <testcase classname="com.justdial.test.GridJustdialTest" name="@BeforeClass setup" time="1.715">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Unable to create new service: ChromeDriverService
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:25:53&amp;apos;
System info: host: &amp;apos;DESKTOP-BFS0L6V&amp;apos;, ip: &amp;apos;192.168.43.183&amp;apos;, os.name: &amp;apos;Windows 8.1&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.3&amp;apos;, java.version: &amp;apos;1.8.0_31&amp;apos;
Driver info: driver.version: unknown
Command duration or timeout: 1.12 seconds">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Unable to create new service: ChromeDriverServiceBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'System info: host: 'DESKTOP-BFS0L6V', ip: '192.168.43.183', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_31'Driver info: driver.version: unknownCommand duration or timeout: 1.12 secondsat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54)at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:125)at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)at com.justdial.test.GridJustdialTest.setup(GridJustdialTest.java:53)Caused by: org.openqa.selenium.SessionNotCreatedException: Unable to create new service: ChromeDriverServiceBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'System info: host: 'DESKTOP-BFS0L6V', ip: '192.168.43.183', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_31'Driver info: driver.version: unknownBuild info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'System info: host: 'DESKTOP-BFS0L6V', ip: '192.168.43.183', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.1'Driver info: driver.version: unknownat org.openqa.selenium.grid.session.remote.ServicedSession$Factory.lambda$get$0(ServicedSession.java:135)at org.openqa.selenium.grid.session.remote.ServicedSession$Factory$$Lambda$140/1514840818.apply(Unknown Source)at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.apply(ServicedSession.java:152)at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12(ActiveSessionFactory.java:180)at org.openqa.selenium.remote.server.ActiveSessionFactory$$Lambda$368/908543768.apply(Unknown Source)at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373)at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:529)at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:516)at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:502)at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)at org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:183)at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2(NewSessionPipeline.java:66)at org.openqa.selenium.remote.server.NewSessionPipeline$$Lambda$361/1097785713.apply(Unknown Source)at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)at java.util.Collections$2.tryAdvance(Collections.java:4717)at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:529)at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:516)at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:502)at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3(NewSessionPipeline.java:69)at org.openqa.selenium.remote.server.NewSessionPipeline$$Lambda$351/2115857288.apply(Unknown Source)at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)at java.util.stream.DistinctOps$1$2.accept(DistinctOps.java:175)at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)at java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Streams.java:405)at java.util.stream.Streams$ConcatSpliterator.tryAdvance(Streams.java:727)at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:529)at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:516)at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:502)at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:72)at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65)at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:235)at org.openqa.selenium.remote.server.WebDriverServlet$$Lambda$267/354244255.run(Unknown Source)at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)at java.util.concurrent.FutureTask.run(FutureTask.java:266)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)at java.lang.Thread.run(Thread.java:745)... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@AfterMethod extentWrite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod extentWrite -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@AfterMethod extentWrite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod extentWrite -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@AfterMethod extentWrite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod extentWrite -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@AfterMethod extentWrite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod extentWrite -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@AfterMethod extentWrite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod extentWrite -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="CheckTitel" time="0.0">
    <skipped/>
  </testcase> <!-- CheckTitel -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="LocationSetTest" time="0.0">
    <skipped/>
  </testcase> <!-- LocationSetTest -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="SearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- SearchTest -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="RattingTest" time="0.0">
    <skipped/>
  </testcase> <!-- RattingTest -->
  <testcase classname="com.justdial.test.GridJustdialTest" name="SelectDataTest" time="0.0">
    <skipped/>
  </testcase> <!-- SelectDataTest -->
</testsuite> <!-- ChromeTest -->
